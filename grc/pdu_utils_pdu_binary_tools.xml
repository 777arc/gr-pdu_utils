<?xml version="1.0"?>
<block>
  <name>PDU Binary Tools</name>
  <key>pdu_utils_pdu_binary_tools</key>
  <category>[Sandia]/PDU Utilities/</category>
  <import>import pdu_utils</import>
  <make>pdu_utils.pdu_binary_tools($mode)</make>

  <param>
    <name>Mode</name>
    <key>mode</key>
    <type>enum</type>
    <option>
      <name>Bit Flip</name>
      <!--<key>pdu_utils.pdu_binary_tools.BIT_FLIP</key>-->
      <key>0</key>
    </option>
    <option>
      <name>To NRZ</name>
      <!--<key>pdu_utils.pdu_binary_tools.TO_PAM</key>-->
      <key>1</key>
    </option>
    <option>
      <name>From NRZ</name>
      <!--<key>pdu_utils.pdu_binary_tools.FROM_PAM</key>-->
      <key>2</key>
    </option>
    <option>
      <name>Slice</name>
      <!--<key>pdu_utils.pdu_binary_tools.SLICE</key>-->
      <key>3</key>
    </option>
    <option>
      <name>Endian Swap</name>
      <!--<key>pdu_utils.pdu_binary_tools.ENDIA_SWAP8</key>-->
      <key>4</key>
    </option>
  </param>

  <sink>
    <name>pdu_in</name>
    <type>message</type>
    <optional>1</optional>
  </sink>
  <source>
    <name>pdu_out</name>
    <type>message</type>
    <optional>1</optional>
  </source>

  <doc>
This block does not do byte-level operations, only binary, stored in uint8_t.

Bit flip mode: Bitflips the uint8 vector portion of a pmt.

To NRZ mode: Takes 0/1 data in uint8_t vector and changes to -1/1

From NRZ mode: Takes -1/1 data in float vector and changes to 0/1

Slice mode: negative values map to 0, positive values map to 1

Endian Swap mode: read a bit stream and flip the bit order on 8 byte boundaries so that
the byte order is preserved, but each byte is endian-swapped

  </doc>
</block>
