<?xml version="1.0"?>
<block>
  <name>Tag Message Trigger</name>
  <key>pdu_utils_tag_message_trigger_X</key>
  <category>[Sandia]/PDU Utilities</category>
  <import>import pdu_utils</import>
  <import>import pmt</import>
  <make>pdu_utils.tag_message_trigger_$(type)($trig_key, $arm_key, $msg, $holdoff, $samp_rate, $start_time, $delay_time, $tpdu_mode)</make>

  <callback>set_trigger_key($trig_key)</callback>
  <callback>set_arming_key($arm_key)</callback>
  <callback>set_message($msg)</callback>
  <callback>set_holdoff($holdoff)</callback>
  <callback>set_sample_rate($samp_rate)</callback>
  <callback>set_delay_time($delay_time)</callback>

  <param>
    <name>Type</name>
    <key>type</key>
    <type>enum</type>
    <option>
      <name>Complex</name>
      <key>c</key>
      <opt>input:complex</opt>
    </option>
    <option>
      <name>Float</name>
      <key>f</key>
      <opt>input:float</opt>
    </option>
    <option>
      <name>Int</name>
      <key>i</key>
      <opt>input:int</opt>
    </option>
    <option>
      <name>Short</name>
      <key>s</key>
      <opt>input:short</opt>
    </option>
    <option>
      <name>Byte</name>
      <key>b</key>
      <opt>input:byte</opt>
    </option>
  </param>
  <param>
    <name>Trigger Tag Key</name>
    <key>trig_key</key>
    <value>pmt.intern("TRIGGER")</value>
    <type>raw</type>
  </param>
  <param>
    <name>Arming Tag Key</name>
    <key>arm_key</key>
    <value>pmt.PMT_NIL</value>
    <type>raw</type>
    <hide>part</hide>
    <option>
      <name>Disabled</name>
      <key>pmt.PMT_NIL</key>
    </option>
    <option>
      <name>pmt.intern("ARM")</name>
      <key>pmt.intern("ARM")</key>
    </option>
  </param>
  <param>
    <name>Message</name>
    <key>msg</key>
    <value>pmt.cons(pmt.make_dict(), pmt.init_c32vector(1,[0]))</value>
    <type>raw</type>
  </param>
  <param>
    <name>Holdoff (samp)</name>
    <key>holdoff</key>
    <value>0</value>
    <type>int</type>
    <hide>part</hide>
  </param>
  <param>
    <name>Mode</name>
    <key>tpdu_mode</key>
    <value>all</value>
    <type>enum</type>
    <option>
      <name>Message</name>
      <key>0</key>
      <opt>hide:all</opt>
    </option>
    <option>
      <name>Timed PDU</name>
      <key>1</key>
      <opt>hide:part</opt>
    </option>
  </param>
  <param>
    <name>Sample Rate</name>
    <key>samp_rate</key>
    <value>1e6</value>
    <type>float</type>
    <hide>$tpdu_mode.hide</hide>
  </param>
  <param>
    <name>Start Time</name>
    <key>start_time</key>
    <value>0.0</value>
    <type>float</type>
    <hide>$tpdu_mode.hide</hide>
  </param>
  <param>
    <name>Delay Time</name>
    <key>delay_time</key>
    <value>0.0</value>
    <type>float</type>
    <hide>$tpdu_mode.hide</hide>
  </param>
  <param>
    <name>Config Port</name>
    <key>showport</key>
    <value>True</value>
    <type>enum</type>
    <hide>part</hide>
    <option>
      <name>Show</name>
      <key>False</key>
    </option>
    <option>
      <name>Hide</name>
      <key>True</key>
    </option>
  </param>

  <check>$holdoff &gt;= 0</check>
  <check>$samp_rate &gt; 0</check>
  <check>$start_time &gt;= 0</check>
  <check>$delay_time &gt;= 0</check>

  <sink>
    <name>in</name>
    <type>$type.input</type>
  </sink>
  <sink>
    <name>ctrl</name>
    <type>message</type>
    <optional>1</optional>
    <hide>$showport</hide>
  </sink>

  <source>
 		<name>msg</name>
 		<type>message</type>
    <optional>1</optional>
 	</source>

  <doc>This block emits a predefined message when a tag is received with a matching key on the streaming input port. Will not trigger twice within \holdoff\ samples, and will disarm after \holdoff\ samples unless \holdoff\ is set to '0' in which case it will be ignored.</doc>

</block>
