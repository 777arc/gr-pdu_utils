<?xml version="1.0"?>
<block>
  <name>PDU Clock Recovery</name>
  <key>pdu_utils_pdu_clock_recovery</key>
  <category>[Sandia]/PDU Utilities</category>
  <import>import pdu_utils</import>
  <make>pdu_utils.pdu_clock_recovery($binary_slice.val)</make>

  <param>
    <name>Slice?</name>
    <key>binary_slice</key>
    <type>enum</type>
    <option>
      <name>Binary</name>
      <key>binary</key>
      <opt>val:True</opt>
    </option>
    <option>
      <name>None</name>
      <key>none</key>
      <opt>val:False</opt>
    </option>
  </param>

  <sink>
    <name>pdu_in</name>
    <type>message</type>
  </sink>

  <source>
    <name>pdu_out</name>
    <type>message</type>
  </source>
  <source>
    <name>debug</name>
    <type>message</type>
    <optional>1</optional>
  </source>

  <doc>
Performs whole-packet clock recovery on a PDU. Based on Michael Ossmann's talk here: https://www.youtube.com/watch?v=rQkBDMeODHc

Input is a demodulated packet with any number of samples per symbol.

Output is a f32vector PDU of soft symbols (if Slice set to None) or a u8vector PDU of symbols (if Slice is set to Binary).

Replaces sample rate metadata with symbol rate metadata.
  </doc>

</block>
